logo = case_when(
party == "Cambiemos" ~  here::here('', paste0(
'_posts/2023-05-03-politicxs-en-twitter-again-online/plots/JXC.png')) ,
party == "Frente de Todos" ~ here::here('', paste0(
'_posts/2023-05-03-politicxs-en-twitter-again-online/plots/FDT.png')),
party == "Libertarios" ~ here::here('', paste0(
'_posts/2023-05-03-politicxs-en-twitter-again-online/plots/fit.png')),
party == "Frente de Izquierda" ~ here::here('', paste0(
'_posts/2023-05-03-politicxs-en-twitter-again-online/plots/Libertarios.png')),
)
)
network_info |>
filter(year == election_year)|>
mutate(link_eig = gsub("@", "https://twitter.com/",screen_eigenvector ),
link_eig = sprintf('<a href = "%s">%s</a>', link_eig, screen_eigenvector),
screen_eigenvector1 = map(link_eig, gt::html),
link_aut = gsub("@", "https://twitter.com/",screen_autority ),
link_aut = sprintf('<a href = "%s">%s</a>', link_aut, screen_autority),
screen_autority1 = map(link_aut, gt::html),
link_first_node = gsub("@", "https://twitter.com/",first_username ),
link_first_node = sprintf('<a href = "%s">%s</a> ', link_first_node, first_username),
farther_nodes1= map(link_first_node, gt::html),
link_second_node = gsub("@", "https://twitter.com/",second_username ),
link_second_node = sprintf('<a href = "%s">%s</a> ', link_second_node, second_username),
farther_nodes2= map(link_second_node, gt::html),
farther_nodes_ =paste(map(link_first_node, gt::html), " - ", map(link_second_node, gt::html))
) |>
gt() |>
tab_header(
title = "S&P 500" ,
subtitle = glue::glue("{election_year}") ) |>
fmt_markdown(columns = c(farther_nodes_)) |>
text_transform(
locations = cells_body(columns = c(path, logo)),
fn = function(path) {
lapply(path, local_image, height = 50)
}
) |>
cols_label(logo = '')
network_info |>
filter(year == election_year)|>
mutate(link_eig = gsub("@", "https://twitter.com/",screen_eigenvector ),
link_eig = sprintf('<a href = "%s">%s</a>', link_eig, screen_eigenvector),
screen_eigenvector1 = map(link_eig, gt::html),
link_aut = gsub("@", "https://twitter.com/",screen_autority ),
link_aut = sprintf('<a href = "%s">%s</a>', link_aut, screen_autority),
screen_autority1 = map(link_aut, gt::html),
link_first_node = gsub("@", "https://twitter.com/",first_username ),
link_first_node = sprintf('<a href = "%s">%s</a> ', link_first_node, first_username),
farther_nodes1= map(link_first_node, gt::html),
link_second_node = gsub("@", "https://twitter.com/",second_username ),
link_second_node = sprintf('<a href = "%s">%s</a> ', link_second_node, second_username),
farther_nodes2= map(link_second_node, gt::html),
farther_nodes_ =paste(map(link_first_node, gt::html), " - ", map(link_second_node, gt::html))
) |>
gt() |>
tab_header(
title = "S&P 500" ,
subtitle = glue::glue("{election_year}") ) |>
fmt_markdown(columns = c(farther_nodes_)) |>
text_transform(
locations = cells_body(columns = c(path)),
fn = function(path) {
lapply(path, local_image, height = 100)
}
) |>
text_transform(
locations = cells_body(columns = c(logo)),
fn = function(logo) {
lapply(path, local_image, height = 50)
}
)
cols_label(logo = '')
network_info |>
filter(year == election_year)|>
mutate(link_eig = gsub("@", "https://twitter.com/",screen_eigenvector ),
link_eig = sprintf('<a href = "%s">%s</a>', link_eig, screen_eigenvector),
screen_eigenvector1 = map(link_eig, gt::html),
link_aut = gsub("@", "https://twitter.com/",screen_autority ),
link_aut = sprintf('<a href = "%s">%s</a>', link_aut, screen_autority),
screen_autority1 = map(link_aut, gt::html),
link_first_node = gsub("@", "https://twitter.com/",first_username ),
link_first_node = sprintf('<a href = "%s">%s</a> ', link_first_node, first_username),
farther_nodes1= map(link_first_node, gt::html),
link_second_node = gsub("@", "https://twitter.com/",second_username ),
link_second_node = sprintf('<a href = "%s">%s</a> ', link_second_node, second_username),
farther_nodes2= map(link_second_node, gt::html),
farther_nodes_ =paste(map(link_first_node, gt::html), " - ", map(link_second_node, gt::html))
) |>
gt() |>
tab_header(
title = "S&P 500" ,
subtitle = glue::glue("{election_year}") ) |>
fmt_markdown(columns = c(farther_nodes_)) |>
text_transform(
locations = cells_body(columns = c(path)),
fn = function(path) {
lapply(path, local_image, height = 100)
}
) |>
text_transform(
locations = cells_body(columns = c(logo)),
fn = function(logo) {
lapply(path, local_image, height = 50)
}
)
cols_label(logo = '')
rm(network_info)
network_info<- read_csv("C:/Users/User/Documents/GitHub/guada-blog/_posts/2023-05-03-politicxs-en-twitter-again-online/plots/centrality_info.csv")
pattern1 <- "^@([[:alnum:]_]+)"
pattern2 <- "- @([[:alnum:]_]+)"
usernames <- apply(network_info["farther_nodes"], 1, function(x) {
matches1 <- str_extract(x, pattern1)
matches2 <- str_extract(x, pattern2)
return(c(matches1, matches2))
})
network_info$first_username <- usernames[1,]
network_info$second_username <- gsub("- ", "" , usernames[2,])
network_info$path <- here::here('', paste0(
'_posts/2023-05-03-politicxs-en-twitter-again-online/plots/', tolower(network_info$path)
))
network_info <- network_info %>% mutate(
logo = case_when(
party == "Cambiemos" ~  here::here('', paste0(
'_posts/2023-05-03-politicxs-en-twitter-again-online/plots/JXC.png')) ,
party == "Frente de Todos" ~ here::here('', paste0(
'_posts/2023-05-03-politicxs-en-twitter-again-online/plots/FDT.png')),
party == "Libertarios" ~ here::here('', paste0(
'_posts/2023-05-03-politicxs-en-twitter-again-online/plots/fit.png')),
party == "Frente de Izquierda" ~ here::here('', paste0(
'_posts/2023-05-03-politicxs-en-twitter-again-online/plots/Libertarios.png')),
)
)
head(network_info)
rm(network_info)
network_info<- read_csv("C:/Users/User/Documents/GitHub/guada-blog/_posts/2023-05-03-politicxs-en-twitter-again-online/plots/centrality_info.csv")
pattern1 <- "^@([[:alnum:]_]+)"
pattern2 <- "- @([[:alnum:]_]+)"
usernames <- apply(network_info["farther_nodes"], 1, function(x) {
matches1 <- str_extract(x, pattern1)
matches2 <- str_extract(x, pattern2)
return(c(matches1, matches2))
})
network_info$first_username <- usernames[1,]
network_info$second_username <- gsub("- ", "" , usernames[2,])
network_info$path <- here::here('', paste0(
'_posts/2023-05-03-politicxs-en-twitter-again-online/plots/', tolower(network_info$path)
))
network_info <- network_info %>%
filter(party != "Otr@s") %>%
mutate(
logo = case_when(
party == "Cambiemos" ~  here::here('', paste0(
'_posts/2023-05-03-politicxs-en-twitter-again-online/plots/JXC.png')) ,
party == "Frente de Todos" ~ here::here('', paste0(
'_posts/2023-05-03-politicxs-en-twitter-again-online/plots/FDT.png')),
party == "Libertarios" ~ here::here('', paste0(
'_posts/2023-05-03-politicxs-en-twitter-again-online/plots/fit.png')),
party == "Frente de Izquierda" ~ here::here('', paste0(
'_posts/2023-05-03-politicxs-en-twitter-again-online/plots/Libertarios.png')),
)
)
head(network_info)
election_year <- 2019
network_info |>
filter(year == election_year)|>
mutate(link_eig = gsub("@", "https://twitter.com/",screen_eigenvector ),
link_eig = sprintf('<a href = "%s">%s</a>', link_eig, screen_eigenvector),
screen_eigenvector1 = map(link_eig, gt::html),
link_aut = gsub("@", "https://twitter.com/",screen_autority ),
link_aut = sprintf('<a href = "%s">%s</a>', link_aut, screen_autority),
screen_autority1 = map(link_aut, gt::html),
link_first_node = gsub("@", "https://twitter.com/",first_username ),
link_first_node = sprintf('<a href = "%s">%s</a> ', link_first_node, first_username),
farther_nodes1= map(link_first_node, gt::html),
link_second_node = gsub("@", "https://twitter.com/",second_username ),
link_second_node = sprintf('<a href = "%s">%s</a> ', link_second_node, second_username),
farther_nodes2= map(link_second_node, gt::html),
farther_nodes_ =paste(map(link_first_node, gt::html), " - ", map(link_second_node, gt::html))
) |>
gt() |>
tab_header(
title = "S&P 500" ,
subtitle = glue::glue("{election_year}") ) |>
fmt_markdown(columns = c(farther_nodes_)) |>
text_transform(
locations = cells_body(columns = c(path)),
fn = function(path) {
lapply(path, local_image, height = 100)
}
) |>
text_transform(
locations = cells_body(columns = c(logo)),
fn = function(logo) {
lapply(path, local_image, height = 50)
}
)
lapply(logo, local_image, height = 50)
network_info |>
filter(year == election_year)|>
mutate(link_eig = gsub("@", "https://twitter.com/",screen_eigenvector ),
link_eig = sprintf('<a href = "%s">%s</a>', link_eig, screen_eigenvector),
screen_eigenvector1 = map(link_eig, gt::html),
link_aut = gsub("@", "https://twitter.com/",screen_autority ),
link_aut = sprintf('<a href = "%s">%s</a>', link_aut, screen_autority),
screen_autority1 = map(link_aut, gt::html),
link_first_node = gsub("@", "https://twitter.com/",first_username ),
link_first_node = sprintf('<a href = "%s">%s</a> ', link_first_node, first_username),
farther_nodes1= map(link_first_node, gt::html),
link_second_node = gsub("@", "https://twitter.com/",second_username ),
link_second_node = sprintf('<a href = "%s">%s</a> ', link_second_node, second_username),
farther_nodes2= map(link_second_node, gt::html),
farther_nodes_ =paste(map(link_first_node, gt::html), " - ", map(link_second_node, gt::html))
) |>
gt() |>
tab_header(
title = "S&P 500" ,
subtitle = glue::glue("{election_year}") ) |>
fmt_markdown(columns = c(farther_nodes_)) |>
text_transform(
locations = cells_body(columns = c(path)),
fn = function(path) {
lapply(path, local_image, height = 100)
}
) |>
text_transform(
locations = cells_body(columns = c(logo)),
fn = function(logo) {
lapply(logo, local_image, height = 50)
}
)
knitr::opts_chunk$set(echo = TRUE)
data <-  get_network_data("all", start_date = "2021-06-01",end_date = "2021-12-31")
data <- data[!is.na(old$retweet_user_id), ]
data <- data[!is.na(data$user_id), ]
data <- data %>% group_by(user_id, retweet_user_id) %>%
summarise(sum = sum(value))
paged_table(data)
library(rmarkdown)
paged_table(data)
data <- data %>% drop_na()
paged_table(data)
data <-  get_network_data("all", start_date = "2021-06-01",end_date = "2021-12-31")
data <-  get_network_data("all", start_date = "2021-06-01",end_date = "2021-12-31")
data <- data[!is.na(old$retweet_user_id), ]
data <- data[!is.na(data$user_id), ]
paged_table(data)
data <-  get_network_data("all", start_date = "2021-06-01",end_date = "2021-12-31")
data <-  get_network_data("all", start_date = "2021-06-01",end_date = "2021-12-31")
data <- data[!is.na(old$retweet_user_id) & !is.na(data$user_id), ]
data <- data[, ]
paged_table(data)
data <-  get_network_data("all", start_date = "2021-06-01",end_date = "2021-12-31")
data <-  get_network_data("all", start_date = "2021-06-01",end_date = "2021-12-31")
data <- data[!is.na(old$retweet_user_id), ]
data <- data[!is.na(data$user_id), ]
paged_table(data)
paged_table(head(data))
head(data_colors)
library(sknifedatar)
net_try <- network_info |>
filter(year == election_year)|>
mutate(link_eig = gsub("@", "https://twitter.com/",screen_eigenvector ),
link_eig = sprintf('<a href = "%s">%s</a>', link_eig, screen_eigenvector),
screen_eigenvector1 = map(link_eig, gt::html),
link_aut = gsub("@", "https://twitter.com/",screen_autority ),
link_aut = sprintf('<a href = "%s">%s</a>', link_aut, screen_autority),
screen_autority1 = map(link_aut, gt::html),
link_first_node = gsub("@", "https://twitter.com/",first_username ),
link_first_node = sprintf('<a href = "%s">%s</a> ', link_first_node, first_username),
farther_nodes1= map(link_first_node, gt::html),
link_second_node = gsub("@", "https://twitter.com/",second_username ),
link_second_node = sprintf('<a href = "%s">%s</a> ', link_second_node, second_username),
farther_nodes2= map(link_second_node, gt::html),
farther_nodes_ =paste(map(link_first_node, gt::html), " - ", map(link_second_node, gt::html))
) #|>
net_try <- network_info |>
# filter(year == election_year)|>
mutate(link_eig = gsub("@", "https://twitter.com/",screen_eigenvector ),
link_eig = sprintf('<a href = "%s">%s</a>', link_eig, screen_eigenvector),
screen_eigenvector1 = map(link_eig, gt::html),
link_aut = gsub("@", "https://twitter.com/",screen_autority ),
link_aut = sprintf('<a href = "%s">%s</a>', link_aut, screen_autority),
screen_autority1 = map(link_aut, gt::html),
link_first_node = gsub("@", "https://twitter.com/",first_username ),
link_first_node = sprintf('<a href = "%s">%s</a> ', link_first_node, first_username),
farther_nodes1= map(link_first_node, gt::html),
link_second_node = gsub("@", "https://twitter.com/",second_username ),
link_second_node = sprintf('<a href = "%s">%s</a> ', link_second_node, second_username),
farther_nodes2= map(link_second_node, gt::html),
farther_nodes_ =paste(map(link_first_node, gt::html), " - ", map(link_second_node, gt::html))
) #|>
nest_data <- net_try %>%
nest(nested_column = -year) %>%
mutate(ts_plots = map(nested_column,
~   gt()
))
nest_data <- net_try %>%
nest(nested_column = -year) %>%
mutate(ts_plots = map(nested_column,
~gt()
))
nest_data <- net_try %>%
nest(nested_column = -year)
library(igraph)
aut <- authority.score(net_party)$vector
farthest_vertices(net_party)$vertices[[1]]$screen_name
farthest_vertices(net_party)$vertices[[2]]$screen_name
data <-  get_network_data("all", start_date = "2021-06-01",end_date = "2021-12-31")
data <- data[!is.na(data$retweet_user_id), ]
data <- data[!is.na(data$user_id), ]
paged_table(head(data))
data_colors <- read_csv("https://raw.githubusercontent.com/guadag12/configuration_db/main/data_colors.csv")
data_colors$user_id <- as.character(as.numeric(data_colors$user_id))
paged_table(head(data_colors))
data <- data %>% group_by(user_id, retweet_user_id) %>%
summarise(sum = sum(value))
data <- data %>% drop_na()
data <- data %>%
left_join(data_colors[, c("user_id", "Color")]) %>%
rename(color=Color)
data$color <- as.factor(data$color)
paged_table(head(data))
edges_network <- data[data$user_id %in% unique(data_colors[data_colors$Color == "#fcd201", "user_id"]) &
data$retweet_user_id %in% unique(data_colors[data_colors$Color ==  "#fcd201", "user_id"]), ]
unique_users <- unique(c(unique(edges_network$user_id),
unique(edges_network$retweet_user_id)))
unique_users <- data.frame(unique_users)
unique_users<- rename(unique_users, user_id=unique_users)
vertices_network <- left_join(unique_users, politicxsentwitteR::politicxs_data, by =  "user_id") %>%
select(user_id, screen_name, category, followers_count, gender) %>%
filter(user_id %in% unique(edges_network$user_id) | user_id %in% unique(edges_network$retweet_user_id))
vertices_network <- vertices_network[!is.na(vertices_network$user_id), ]
vertices_network <- vertices_network [!duplicated(vertices_network[c("user_id")]),]
vertices_network <- vertices_network[vertices_network$user_id %in% unique_users$user_id,  ]
vertices_network$followers_count <- as.numeric(as.character(vertices_network$followers_count))
vertices_network$screen_name <- ifelse(substr(vertices_network$screen_name, 1, 1) != "@", paste0("@", vertices_network$screen_name), vertices_network$screen_name)
color_network <- "#fcd201"
net_party<- graph_from_data_frame(d = edges_network,
vertices = vertices_network,
directed = T)
g <- as_tbl_graph(net_party) %>%
tidygraph::activate(nodes) %>%
dplyr::mutate(label=screen_name,
color = color_network,
fill = color
)
V(g)$degree<- degree(g, mode="in")
V(g)$label <- ifelse(V(g)$degree > quantile(V(g)$degree , 0.9), paste0(V(tg)$label), "")
layout <- create_layout(g, layout = 'igraph', algorithm = 'nicely')
got_palette <- c(color_network)
set.seed(42)
x <- g %>%
ggraph(layout = "fr") +
geom_edge_arc(colour= color_network,
lineend = "round",
strength = .1,
alpha = .1) +
geom_node_point(aes(size = degree),
col = "white",
show.legend = F)+
geom_node_point(aes(size = degree,
alpha = degree,
color = color_network),
show.legend = F) +
scale_color_manual(values = got_palette) +
theme_graph(background = "white")
plot(x)
library(igraph)
aut <- authority.score(net_party)$vector
wc <- walktrap.community(net_party)
s <- sizes(wc)
centrality_party <- data.frame(party = "Cambiemos",
year = "2021",
diameter = diameter(net_party, directed = TRUE),
mean_distance = mean_distance(net_party),
density = edge_density(net_party),
screen_eigenvector = paste0("@", na.omit(politicxs_data[politicxs_data$user_id == names(V(net_party))[ which.max(eigen_centrality(net_party)$vector )] , "screen_name"])[1]),
screen_autority =  paste0("@",na.omit(politicxs_data[politicxs_data$user_id == names(aut)[which.max(aut)] , "screen_name"])[1]),
size_network = gsize(net_party),
amount_communities = length(s[s > 2])+1,
assortative = round(assortativity_degree(net_party),3),
assortative_gender =round(igraph::assortativity_nominal(net_party, as.numeric(as.factor(V(net_party)$gender))),3),
assortative_category=round(igraph::assortativity_nominal(net_party, as.numeric(as.factor(V(net_party)$category))),3),
farther_nodes = paste0(farthest_vertices(net_party)$vertices[[1]]$screen_name," - ",
farthest_vertices(net_party)$vertices[[2]]$screen_name),
path = "Cambiemos_2021.png")
farthest_vertices(net_party)$vertices[[1]]$screen_name
farthest_vertices(net_party)$vertices[[2]]$screen_name
farthest_vertices(net_party)
farthest.nodes(network_party)
farthest.nodes(g)
farthest_vertices(g)
class(network_party)
class(g)
edges_network
data[data$user_id %in% unique(data_colors[data_colors$Color == "#fcd201", "user_id"]) &
data$retweet_user_id %in% unique(data_colors[data_colors$Color ==  "#fcd201", "user_id"]), ]
unique(data_colors$Colo)
unique(data_colors$Color)
unique(data_colors[data_colors$Color == "#fcd201", "user_id"])
data
data[data$user_id %in% unique(data_colors[data_colors$Color == "#fcd201", "user_id"]) &
data$retweet_user_id %in% unique(data_colors[data_colors$Color ==  "#fcd201", "user_id"]), ]
class(data)
data <-  get_network_data("all", start_date = "2021-06-01",end_date = "2021-12-31")
data <-  get_network_data("all", start_date = "2021-06-01",end_date = "2021-12-31")
data <- data.frame(lapply(data, as.character), stringsAsFactors=FALSE)
data$value <- as.numeric(as.character(data$value))
data <- data[!is.na(data$retweet_user_id), ]
data <- data[!is.na(data$user_id), ]
paged_table(head(data))
data_colors <- read_csv("https://raw.githubusercontent.com/guadag12/configuration_db/main/data_colors.csv")
paged_table(head(data_colors))
data <- data %>% group_by(user_id, retweet_user_id) %>%
summarise(sum = sum(value))
data <- data %>%
left_join(data_colors[, c("user_id", "Color")]) %>%
rename(color=Color)
data_colors <- read_csv("https://raw.githubusercontent.com/guadag12/configuration_db/main/data_colors.csv")
data <- data %>% group_by(user_id, retweet_user_id) %>%
summarise(sum = sum(value))
data <- data %>% drop_na()
data <-  get_network_data("all", start_date = "2021-06-01",end_date = "2021-12-31")
data <-  get_network_data("all", start_date = "2021-06-01",end_date = "2021-12-31")
data <- data.frame(lapply(data, as.character), stringsAsFactors=FALSE)
data$value <- as.numeric(as.character(data$value))
data <- data[!is.na(data$retweet_user_id), ]
data <- data[!is.na(data$user_id), ]
data_colors <- read_csv("https://raw.githubusercontent.com/guadag12/configuration_db/main/data_colors.csv")
data_colors <- data.frame(lapply(data_colors, as.character), stringsAsFactors=FALSE)
data_colors <- read_csv("https://raw.githubusercontent.com/guadag12/configuration_db/main/data_colors.csv")
data_colors <- data.frame(lapply(data_colors, as.character), stringsAsFactors=FALSE)
data <- data %>% group_by(user_id, retweet_user_id) %>%
summarise(sum = sum(value))
data <- data %>% drop_na()
data <- data %>%
left_join(data_colors[, c("user_id", "Color")]) %>%
rename(color=Color)
data$color <- as.factor(data$color)
paged_table(head(data))
edges_network <- data[data$user_id %in% unique(data_colors[data_colors$Color == "#fcd201", "user_id"]) &
data$retweet_user_id %in% unique(data_colors[data_colors$Color ==  "#fcd201", "user_id"]), ]
unique_users <- unique(c(unique(edges_network$user_id),
unique(edges_network$retweet_user_id)))
unique_users <- data.frame(unique_users)
unique_users<- rename(unique_users, user_id=unique_users)
vertices_network <- left_join(unique_users, politicxsentwitteR::politicxs_data, by =  "user_id") %>%
select(user_id, screen_name, category, followers_count, gender) %>%
filter(user_id %in% unique(edges_network$user_id) | user_id %in% unique(edges_network$retweet_user_id))
vertices_network <- vertices_network[!is.na(vertices_network$user_id), ]
vertices_network <- left_join(unique_users, politicxsentwitteR::politicxs_data, by =  "user_id") %>%
select(user_id, screen_name, category, followers_count, gender) %>%
filter(user_id %in% unique(edges_network$user_id) | user_id %in% unique(edges_network$retweet_user_id))
vertices_network <- vertices_network[!is.na(vertices_network$user_id), ]
vertices_network <- vertices_network [!duplicated(vertices_network[c("user_id")]),]
vertices_network <- vertices_network[vertices_network$user_id %in% unique_users$user_id,  ]
vertices_network$followers_count <- as.numeric(as.character(vertices_network$followers_count))
vertices_network$screen_name <- ifelse(substr(vertices_network$screen_name, 1, 1) != "@", paste0("@", vertices_network$screen_name), vertices_network$screen_name)
color_network <- "#fcd201"
net_party<- graph_from_data_frame(d = edges_network,
vertices = vertices_network,
directed = T)
g <- as_tbl_graph(net_party) %>%
tidygraph::activate(nodes) %>%
dplyr::mutate(label=screen_name,
color = color_network,
fill = color
)
V(g)$degree<- degree(g, mode="in")
V(g)$label <- ifelse(V(g)$degree > quantile(V(g)$degree , 0.9), paste0(V(tg)$label), "")
layout <- create_layout(g, layout = 'igraph', algorithm = 'nicely')
got_palette <- c(color_network)
set.seed(42)
x <- g %>%
ggraph(layout = "fr") +
geom_edge_arc(colour= color_network,
lineend = "round",
strength = .1,
alpha = .1) +
geom_node_point(aes(size = degree),
col = "white",
show.legend = F)+
geom_node_point(aes(size = degree,
alpha = degree,
color = color_network),
show.legend = F) +
scale_color_manual(values = got_palette) +
theme_graph(background = "white")
plot(x)
library(igraph)
library(igraph)
aut <- authority.score(net_party)$vector
s <- sizes(wc)
centrality_party <- data.frame(party = "Cambiemos",
year = "2021",
diameter = diameter(net_party, directed = TRUE),
mean_distance = mean_distance(net_party),
density = edge_density(net_party),
screen_eigenvector = paste0("@", na.omit(politicxs_data[politicxs_data$user_id == names(V(net_party))[ which.max(eigen_centrality(net_party)$vector )] , "screen_name"])[1]),
screen_autority =  paste0("@",na.omit(politicxs_data[politicxs_data$user_id == names(aut)[which.max(aut)] , "screen_name"])[1]),
size_network = gsize(net_party),
amount_communities = length(s[s > 2])+1,
assortative = round(assortativity_degree(net_party),3),
assortative_gender =round(igraph::assortativity_nominal(net_party, as.numeric(as.factor(V(net_party)$gender))),3),
assortative_category=round(igraph::assortativity_nominal(net_party, as.numeric(as.factor(V(net_party)$category))),3),
farther_nodes = paste0(farthest_vertices(net_party)$vertices[[1]]$screen_name," - ",
farthest_vertices(net_party)$vertices[[2]]$screen_name),
path = "Cambiemos_2021.png")
network_info
min(network_info[network_info$year == 2019, "assortative"])
min(network_info[network_info$year == 2019, "assortative"])
