#  mutate(assortative = as.numeric(assortative)) |>
filter(year == 2019)|>
select(logo, mean_distance,density, #diameter, ,
# size_network, amount_communities, farther_nodes_
assortative,	assortative_gender,	assortative_category,
screen_eigenvector1,#, screen_autority1,
path) |>
gt() |>
tab_spanner(
label = "Network Measures",
columns = c(mean_distance, density, screen_eigenvector1)
) |>
tab_spanner(
label = "Degree Correlation",
columns = c(assortative, assortative_gender, assortative_category)
) |>
gt_add_divider(columns = "logo") |>
tab_header(
title = "Network Information by Party" ,
subtitle = html("<em>Elections 2019</em>") ) |>
|>
net_try |>
#  mutate(assortative = as.numeric(assortative)) |>
filter(year == 2019)|>
select(logo, mean_distance,density, #diameter, ,
# size_network, amount_communities, farther_nodes_
assortative,	assortative_gender,	assortative_category,
screen_eigenvector1,#, screen_autority1,
path) |>
gt() |>
tab_spanner(
label = "Network Measures",
columns = c(mean_distance, density, screen_eigenvector1)
) |>
tab_spanner(
label = "Degree Correlation",
columns = c(assortative, assortative_gender, assortative_category)
) |>
gt_add_divider(columns = "logo") |>
tab_header(
title = "Network Information by Party" ,
subtitle = html("<em>Elections 2019</em>") ) |>
data_color(
columns = assortative,
fn = scales::col_numeric(
palette = "viridis",
domain = c(-1,1) )
) |>
#fmt_markdown(columns = c(farther_nodes_)) |>
text_transform(
locations = cells_body(columns = c(path)),
fn = function(path) {
lapply(path, local_image, height = 200)
}
) |>
text_transform(
locations = cells_body(columns = c(logo)),
fn = function(logo) {
lapply(logo, local_image, height = 20)
}
) |>
tab_footnote(
footnote = md("From 1 to -1. Between closest to 1 more correlation between nodes degree"),
locations = cells_column_labels(
columns = assortative
)
) |>
tab_footnote(
footnote =  md("The authority is based on Eigenvector centrality"),
locations = cells_column_labels(
columns = screen_eigenvector1
)
) |>
tab_source_note(
source_note = "Data: politicxsentwitteR from 01/08/2019 to 31/12/2019"
) |>
cols_label(
logo = "",
path = "Network image",
mean_distance = "Mean Distance",
assortative = "Assortative",
assortative_gender = "Assortative (gender)",
assortative_category = "Assortative (category)",
screen_eigenvector1 = "Authority",
density = "Density"
) |>
tab_options(
column_labels.background.color = "white",
table.border.top.width = px(3),
table.border.top.color = "transparent",
table.border.bottom.color = "transparent",
table.border.bottom.width = px(3),
column_labels.border.top.width = px(3),
column_labels.border.top.color = "transparent",
column_labels.border.bottom.width = px(3),
column_labels.border.bottom.color = "black",
data_row.padding = px(3),
source_notes.font.size = 12,
table.font.size = 16,
heading.align = "left")
net_try |>
#  mutate(assortative = as.numeric(assortative)) |>
filter(year == 2019)|>
select(logo, mean_distance,density, #diameter, ,
# size_network, amount_communities, farther_nodes_
assortative,	assortative_gender,	assortative_category,
screen_eigenvector1,#, screen_autority1,
path) |>
gt() |>
tab_spanner(
label = "Network Measures",
columns = c(mean_distance, density, screen_eigenvector1)
) |>
tab_spanner(
label = "Degree Correlation",
columns = c(assortative, assortative_gender, assortative_category)
) |>
gt_add_divider(columns = "logo") |>
tab_header(
title = "Network Information by Party" ,
subtitle = html("<em>Elections 2019</em>") ) |>
#    data_color(
#    columns = assortative,
#  fn = scales::col_numeric(
#    palette = "viridis",
#    domain = c(-1,1) )
# ) |>
#fmt_markdown(columns = c(farther_nodes_)) |>
text_transform(
locations = cells_body(columns = c(path)),
fn = function(path) {
lapply(path, local_image, height = 200)
}
) |>
text_transform(
locations = cells_body(columns = c(logo)),
fn = function(logo) {
lapply(logo, local_image, height = 20)
}
) |>
tab_footnote(
footnote = md("From 1 to -1. Between closest to 1 more correlation between nodes degree"),
locations = cells_column_labels(
columns = assortative
)
) |>
tab_footnote(
footnote =  md("The authority is based on Eigenvector centrality"),
locations = cells_column_labels(
columns = screen_eigenvector1
)
) |>
tab_source_note(
source_note = "Data: politicxsentwitteR from 01/08/2019 to 31/12/2019"
) |>
cols_label(
logo = "",
path = "Network image",
mean_distance = "Mean Distance",
assortative = "Assortative",
assortative_gender = "Assortative (gender)",
assortative_category = "Assortative (category)",
screen_eigenvector1 = "Authority",
density = "Density"
) |>
tab_options(
column_labels.background.color = "white",
table.border.top.width = px(3),
table.border.top.color = "transparent",
table.border.bottom.color = "transparent",
table.border.bottom.width = px(3),
column_labels.border.top.width = px(3),
column_labels.border.top.color = "transparent",
column_labels.border.bottom.width = px(3),
column_labels.border.bottom.color = "black",
data_row.padding = px(3),
source_notes.font.size = 12,
table.font.size = 16,
heading.align = "left")
knitr::opts_chunk$set(echo = TRUE,
eval = TRUE,
warning = FALSE,
message = FALSE)
library(magick)
# Specify the path to the image file
image_path <- "https://github.com/guadag12/politicxsentwitteR/raw/main/man/figures/logo.png"
# Read and display the image
image <- image_read(image_path)
knitr::include_graphics(image)
knitr::include_graphics(image_path)
library(knitr)
# Set the output file
output_file <- "C:/Users/User/Documents/GitHub/guada-blog/cv.pdf"
# Use knitr to create the PDF
knit("cv.Rmd")
# Set the output format to PDF
opts_knit$set(output.format = "pdf")
# Set the output file
output_file <- "C:/Users/User/Documents/GitHub/guada-blog/cv2.pdf"
# Specify the PDF output file
pdf(output_file)
# Knit the R Markdown document
knit("cv.Rmd")
# Close the PDF device
dev.off()
# Set the output file
output_file <- "C:/Users/User/Documents/GitHub/guada-blog/cv2.pdf"
# Use knitr to create the PDF
knit("C:/Users/User/Documents/GitHub/cv/cv.Rmd")
# Set the output format to PDF
opts_knit$set(output.format = "pdf")
# Specify the PDF output file
pdf(output_file)
# Knit the R Markdown document
knit("C:/Users/User/Documents/GitHub/cv/cv.Rmd")
# Close the PDF device
dev.off()
# Set the output file
output_file <- "C:/Users/User/Documents/GitHub/guada-blog/cv2.pdf"
# Use knitr to create the PDF
knit("C:/Users/User/Documents/GitHub/cv/cv.Rmd")
# Set the output format to PDF
opts_knit$set(output.format = "pdf")
# Specify the PDF output file
pdf(output_file)
# Knit the R Markdown document
knit("C:/Users/User/Documents/GitHub/cv/cv.Rmd")
# Close the PDF device
dev.off()
View(mtcars)
head(head_data)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
options(scipen = 999)
library(tidyverse)
library(lme4)
library(plm)
library(gt)
library(car)
library(tidyverse)
library(gridExtra)
dat <- read.csv("IPP_wide_25_09_22.csv")
library(sqldf)
library(tidyverse)
library(car)
library(plm)
require(gridExtra)
library(texreg)
#library(plyr)
options(scipen = 999)
data <- read_csv("IPP_wide_25_09_22.csv")
data2 <- data %>% select("userId", "w6_positive_partisanshi")
#head(data[,c(1:12)],2)
data <- data %>%
select("userId", "sex", "byear", "rel", "edu", "osek",
"fstat", "nafa", "ses", "alyayear", "cbor",  "vote2015","w1_party_vote_intention",
"w3_voted_2019_apr", "w5_voted_2019_sep", "w6_voted_2020"="w6_voted_2019_sep",
"w9_voted_2021",
"w3_vote_choice", "w5_vote_choice", "w6_vote_choice", "w9_vote_choice",
starts_with('w1_thermometer'),
starts_with('w1_thermometer'),  starts_with('w2_thermometer'),
starts_with('w3_thermometer'),  starts_with('w4_thermometer'),
starts_with('w5_thermometer'),  starts_with('w6_thermometer'),
starts_with('w7_thermometer'),  starts_with('w8_thermometer'),
starts_with('w9_thermometer'),  starts_with('w10_thermometer')
) %>%
mutate(vote2015 = case_when(
vote2015 == 1 ~ "Likud",
vote2015 == 2 ~ "Hamahane HaTzioni",
vote2015 == 3 ~ "Joint List",
vote2015 == 4 ~ "Yesh Atid",
vote2015 == 5 ~ "Kulanu",
vote2015 == 6 ~ "Habayit",
vote2015 == 7 ~ "Shas",
vote2015 == 8 ~ "Yahadut",
vote2015 == 9 ~ "Israel",
vote2015 == 10 ~ "Meretz ",
vote2015 == 11 ~ "Yachad",
vote2015 == 12 ~ "Ale",
vote2015 == 13 ~ "Other",
vote2015 == 14 ~ "Did not vote",
vote2015 == 15 ~ "Too young/Don't know/Refuses Answer"
),
age_group = case_when(
byear >= 1995 & byear <= 2001  ~ "18-24",
byear >= 1975 & byear <= 1994  ~ "25-44",
byear >= 1965 &  byear <= 1974  ~ "45-54",
byear >= 1964 ~ ">55"
),
ses = case_when(
ses %in% c(1, 2, 9) ~ "No income or Low",
ses %in% c(3) ~ "Medium",
ses %in% c(4, 5) ~ "High"),
edu = case_when(
edu %in% c(1,2,3,4) ~ "< High School",
edu %in% c(5,6,7) ~ "High School",
edu %in% c(8,9) ~ "Bachelor Degree",
edu >= 10 ~ "Postgraduate")
)
data <- data[,colSums(is.na(data))<nrow(data)]
data  <- data %>% drop_na() %>%
gather(key = "party", value ="thermometer", 22:145 ) %>%
mutate(wave = substr(party, start = 1, stop = 3),
party = gsub("w1_thermometer_|w2_thermometer_|w3_thermometer_|w4_thermometer_|w5_thermometer_|w6_thermometer_|w7_thermometer_|w8_thermometer_|w9_thermometer_|w10_thermometer_|", "", party),
party = case_when(party == "Meretz " ~ "Meretz",
party == "Yesh-Atid" ~ "Yesh Atid",
party == "Habayit Hayehudi" ~ "Habayit-Hayehudi",
party == "Yahadut Hatorah" ~ "Yahadut-Hatorah",
party == "Kahol Lavan" ~ "Kahol-Lavan",
party == "Hamahane Hademokrati" ~ "Hamahane-Hademokrati" ,
party == "Otzma Yehudit" ~ "Otzma-Yehudit" ,
party == "Israel" ~ "Israel Beitenu",
party == "Israel Beitenu" ~ "Israel-Beitenu",
party == "Tikvah Hadasha" ~ "Tikva-Hadasha",
party == "Joint List" ~ "Joint-List",
party == "Hacalcalit Hahadasha" ~ "Hacalcalit-Hahadasha",
party == "Joint List" ~ "Joint-List",
party == "Hazionut Hadatit"~ "Hazionut-Hadatit",
party == "Hayamin Hahadash"~ "Hayamin-Hahadash",
T ~ party
),
vote2015 = case_when(vote2015 == "Meretz " ~ "Meretz",
vote2015 == "Yesh-Atid" ~ "Yesh Atid",
vote2015 == "Habayit Hayehudi" ~ "Habayit-Hayehudi",
vote2015 == "Yahadut Hatorah" ~ "Yahadut-Hatorah",
vote2015 == "Kahol Lavan" ~ "Kahol-Lavan",
vote2015 == "Hamahane Hademokrati" ~ "Hamahane-Hademokrati" ,
vote2015 == "Otzma Yehudit" ~ "Otzma-Yehudit" ,
vote2015 == "Israel" ~ "Israel-Beitenu",
vote2015 == "Tikvah Hadasha" ~ "Tikva-Hadasha",
vote2015 == "Joint List" ~ "Joint-List",
vote2015 == "Hacalcalit Hahadasha" ~ "Hacalcalit-Hahadasha",
vote2015 == "Joint List" ~ "Joint-List",
vote2015 == "Hazionut Hadatit"~ "Hazionut-Hadatit",
vote2015 == "Hayamin Hahadash"~ "Hayamin-Hahadash",
T ~ vote2015
),
w3_vote_choice = case_when(w3_vote_choice == "Meretz " ~ "Meretz",
w3_vote_choice == "Yesh-Atid" ~ "Yesh Atid",
w3_vote_choice == "Habayit Hayehudi" ~ "Habayit-Hayehudi",
w3_vote_choice == "Yahadut Hatorah" ~ "Yahadut-Hatorah",
w3_vote_choice == "Kahol Lavan" ~ "Kahol-Lavan",
w3_vote_choice == "Hamahane Hademokrati" ~ "Hamahane-Hademokrati" ,
w3_vote_choice == "Otzma Yehudit" ~ "Otzma-Yehudit" ,
w3_vote_choice == "Israel" ~ "Israel Beitenu",
w3_vote_choice == "Israel Beitenu" ~ "Israel-Beitenu",
w3_vote_choice == "Tikvah Hadasha" ~ "Tikva-Hadasha",
w3_vote_choice == "Joint List" ~ "Joint-List",
w3_vote_choice == "Hacalcalit Hahadasha" ~ "Hacalcalit-Hahadasha",
w3_vote_choice == "Joint List" ~ "Joint-List",
w3_vote_choice == "Hazionut Hadatit"~ "Hazionut-Hadatit",
w3_vote_choice == "Hayamin Hahadash"~ "Hayamin-Hahadash",
T ~ w3_vote_choice
), w5_vote_choice = case_when(w5_vote_choice == "Meretz " ~ "Meretz",
w5_vote_choice == "Yesh-Atid" ~ "Yesh Atid",
w5_vote_choice == "Habayit Hayehudi" ~ "Habayit-Hayehudi",
w5_vote_choice == "Yahadut Hatorah" ~ "Yahadut-Hatorah",
w5_vote_choice == "Kahol Lavan" ~ "Kahol-Lavan",
w5_vote_choice == "Hamahane Hademokrati" ~ "Hamahane-Hademokrati" ,
w5_vote_choice == "Otzma Yehudit" ~ "Otzma-Yehudit" ,
w5_vote_choice == "Israel" ~ "Israel Beitenu",
w5_vote_choice == "Israel Beitenu" ~ "Israel-Beitenu",
w5_vote_choice == "Tikvah Hadasha" ~ "Tikva-Hadasha",
w5_vote_choice == "Joint List" ~ "Joint-List",
w5_vote_choice == "Hacalcalit Hahadasha" ~ "Hacalcalit-Hahadasha",
w5_vote_choice == "Joint List" ~ "Joint-List",
w5_vote_choice == "Hazionut Hadatit"~ "Hazionut-Hadatit",
w5_vote_choice == "Hayamin Hahadash"~ "Hayamin-Hahadash",
T ~ w5_vote_choice
),
w6_vote_choice = case_when(w6_vote_choice == "Meretz " ~ "Meretz",
w6_vote_choice == "Yesh-Atid" ~ "Yesh Atid",
w6_vote_choice == "Habayit Hayehudi" ~ "Habayit-Hayehudi",
w6_vote_choice == "Yahadut Hatorah" ~ "Yahadut-Hatorah",
w6_vote_choice == "Kahol Lavan" ~ "Kahol-Lavan",
w6_vote_choice == "Hamahane Hademokrati" ~ "Hamahane-Hademokrati" ,
w6_vote_choice == "Otzma Yehudit" ~ "Otzma-Yehudit" ,
w6_vote_choice == "Israel" ~ "Israel Beitenu",
w6_vote_choice == "Israel Beitenu" ~ "Israel-Beitenu",
w6_vote_choice == "Tikvah Hadasha" ~ "Tikva-Hadasha",
w6_vote_choice == "Joint List" ~ "Joint-List",
w6_vote_choice == "Hacalcalit Hahadasha" ~ "Hacalcalit-Hahadasha",
w6_vote_choice == "Joint List" ~ "Joint-List",
w6_vote_choice == "Hazionut Hadatit"~ "Hazionut-Hadatit",
w6_vote_choice == "Hayamin Hahadash"~ "Hayamin-Hahadash",
T ~ w6_vote_choice
),
w9_vote_choice = case_when(w9_vote_choice == "Meretz " ~ "Meretz",
w9_vote_choice == "Yesh-Atid" ~ "Yesh Atid",
w9_vote_choice == "Habayit Hayehudi" ~ "Habayit-Hayehudi",
w9_vote_choice == "Yahadut Hatorah" ~ "Yahadut-Hatorah",
w9_vote_choice == "Kahol Lavan" ~ "Kahol-Lavan",
w9_vote_choice == "Hamahane Hademokrati" ~ "Hamahane-Hademokrati" ,
w9_vote_choice == "Otzma Yehudit" ~ "Otzma-Yehudit" ,
w9_vote_choice == "Israel" ~ "Israel Beitenu",
w9_vote_choice == "Israel Beitenu" ~ "Israel-Beitenu",
w9_vote_choice == "Tikvah Hadasha" ~ "Tikva-Hadasha",
w9_vote_choice == "Joint List" ~ "Joint-List",
w9_vote_choice == "Hacalcalit Hahadasha" ~ "Hacalcalit-Hahadasha",
w9_vote_choice == "Joint List" ~ "Joint-List",
w9_vote_choice == "Hazionut Hadatit"~ "Hazionut-Hadatit",
w9_vote_choice == "Hayamin Hahadash"~ "Hayamin-Hahadash",
T ~ w9_vote_choice
)) %>%
mutate( wave = gsub("_", "", wave)) %>%
filter(!is.na(thermometer))
users_with_more_than_one <- data%>%
group_by(userId) %>%
filter(row_number() <= 2) %>%
slice_tail(n = 1) %>%
select(userId)
data <- users_with_more_than_one %>%
left_join(data, by = "userId")
new_data<- data %>%
group_by(userId, wave) %>%
summarise( affect = sum(thermometer)/length(unique(party)),
spread = sqrt(sum((thermometer-affect)^2) / length(unique(party)))) %>%
left_join(data, by = c("userId", "wave"))
w_1_2<- new_data %>%
filter(wave %in% c("w1", "w2")) %>%
filter(vote2015 == party | w1_party_vote_intention == party) %>%
mutate(max_affect = thermometer) %>%
select(userId, wave,  max_affect)
w_3_4 <- new_data %>%
filter(wave %in% c("w3", "w4")) %>%
filter(w3_vote_choice  == party) %>%
mutate(max_affect = thermometer) %>%
select(userId,  wave, max_affect)
w_5 <- new_data %>%
filter(wave %in% c("w5")) %>%
filter(w5_vote_choice  == party) %>%
mutate(max_affect = thermometer) %>%
select(userId, wave, max_affect)
w_6_7_8 <- new_data %>%
filter(wave %in% c("w6", "w7", "w8")) %>%
filter(w6_vote_choice  == party) %>%
mutate(max_affect = thermometer) %>%
select(userId, wave, max_affect)
w_9_10 <- new_data %>%
filter(wave %in% c("w9", "w10")) %>%
filter(w9_vote_choice  == party) %>%
mutate(max_affect = thermometer) %>%
select(userId, wave, max_affect)
waves_max_affect <- rbind(w_1_2, w_3_4, w_5, w_6_7_8, w_9_10)
new_data2<-new_data %>%
left_join(waves_max_affect, by = c("userId", "wave")) %>%
filter(!is.na(max_affect)) %>%
group_by(userId, wave) %>%
summarise(max_affect = max_affect,
distance= sqrt(sum((thermometer-max_affect)^2) / (length(unique(party))-1)))
data_final <- new_data %>%
left_join(new_data2, by = c("userId", "wave")) %>%
select(userId, wave, sex, byear, age_group, rel, edu, osek, vote2015, fstat, nafa, vote2015,
w1_party_vote_intention,
w3_vote_choice,w5_vote_choice,w6_vote_choice,w9_vote_choice,
ses, alyayear, cbor, party, affect, thermometer, max_affect, spread, distance) %>%
drop_na(spread, distance)
data_final <- sqldf("select * from data_final group by userId, wave, party")
head_data <- head(data_final, 3 )
knitr::kable(head_data, "simple")
names(head_data)
gv903 <- c(73,79,61,71)
gv903/4
sum(gv903)/4
3*(73)+68
(3*(73)+68)/4
ce807<- (3*(73)+68)/4
ce888 <- c(3*(91)+97+90)
sum(ce888)/4
ce888 <- c(2*(91)+97+90)
sum(ce888)/4
ce888 <- c(0.3*(91)+0.15(97)+0.15(90))
sum(ce888)/4
ce888 <- c(0.3*(91)+0.15*(97)+0.15*(90))
sum(ce888)/4
ce888 <- c(0.3*(91)+(0.15*97)+(0.15*90))
sum(ce888)/4
rmarkdown::render_site(encoding = "UTF-8")
library(rmarkdown)
render_site()
library(rmarkdown)
render_site()
install.packages("vitae")
library(rmarkdown)
render_site()
library(rmarkdown)
render_site()
render_site()
library(rmarkdown)
render_site()
rmarkdown::render("cv.Rmd", clean = TRUE)
render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
library(readr)
library(splitstackshape)
library(tidyverse)
BIEP_Puestos_de_Trabajo_APN_s_Genero <- read_delim("C:/Users/User/Downloads/biep_puestos_de_trabajo_-_apn_s_genero_16/BIEP Puestos de Trabajo - APN s_Genero.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
BIEP_Puestos_de_Trabajo_APN_s_Genero <- cSplit(BIEP_Puestos_de_Trabajo_APN_s_Genero, splitCols = "Período Fecha", sep =" ")
BIEP_Puestos_de_Trabajo_APN_s_Genero <- cSplit(BIEP_Puestos_de_Trabajo_APN_s_Genero, splitCols = "Período Fecha_1", sep ="/")
names(BIEP_Puestos_de_Trabajo_APN_s_Genero)
BIEP_Puestos_de_Trabajo_APN_s_Genero$mes_anio <- paste0(BIEP_Puestos_de_Trabajo_APN_s_Genero$`Período Fecha_1_2`, "/", BIEP_Puestos_de_Trabajo_APN_s_Genero$`Período Fecha_1_3`)
biep_spread <-BIEP_Puestos_de_Trabajo_APN_s_Genero %>%
select(`Género`, `Puestos De Trabajo`, Periodo, `Organismo (s/Fecha)`, `Jurisdicción (s/Fecha)`, `Escalafón`) %>%
spread(`Género`, `Puestos De Trabajo`, cantidad)
